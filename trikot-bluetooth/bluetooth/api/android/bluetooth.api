public abstract interface class com/mirego/trikot/bluetooth/AttributeProfileCharacteristic {
	public abstract fun getEvent ()Lorg/reactivestreams/Publisher;
	public abstract fun getUuid ()Ljava/lang/String;
	public abstract fun read ()V
	public abstract fun watch ()V
	public abstract fun watchWithIndication ()V
	public abstract fun write ([B)V
}

public final class com/mirego/trikot/bluetooth/AttributeProfileCharacteristicEvent {
	public fun <init> ([BLjava/lang/Throwable;)V
	public final fun component1 ()[B
	public final fun component2 ()Ljava/lang/Throwable;
	public final fun copy ([BLjava/lang/Throwable;)Lcom/mirego/trikot/bluetooth/AttributeProfileCharacteristicEvent;
	public static synthetic fun copy$default (Lcom/mirego/trikot/bluetooth/AttributeProfileCharacteristicEvent;[BLjava/lang/Throwable;ILjava/lang/Object;)Lcom/mirego/trikot/bluetooth/AttributeProfileCharacteristicEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Ljava/lang/Throwable;
	public final fun getValue ()[B
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/mirego/trikot/bluetooth/AttributeProfileCharacteristicKt {
	public static final fun getError (Lcom/mirego/trikot/bluetooth/AttributeProfileCharacteristic;)Lorg/reactivestreams/Publisher;
	public static final fun getValue (Lcom/mirego/trikot/bluetooth/AttributeProfileCharacteristic;)Lorg/reactivestreams/Publisher;
}

public abstract interface class com/mirego/trikot/bluetooth/AttributeProfileService {
	public abstract fun getCharacteristics ()Lorg/reactivestreams/Publisher;
}

public final class com/mirego/trikot/bluetooth/BluetoothCharacteristicException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class com/mirego/trikot/bluetooth/BluetoothConfiguration {
	public static final field INSTANCE Lcom/mirego/trikot/bluetooth/BluetoothConfiguration;
	public final fun getBluetoothManager ()Lcom/mirego/trikot/bluetooth/BluetoothManager;
	public final fun setBluetoothManager (Lcom/mirego/trikot/bluetooth/BluetoothManager;)V
}

public abstract interface class com/mirego/trikot/bluetooth/BluetoothDevice {
	public abstract fun getAttributeProfileServices ()Lorg/reactivestreams/Publisher;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPhysicalAddress ()Ljava/lang/String;
	public abstract fun isConnected ()Lorg/reactivestreams/Publisher;
}

public abstract interface class com/mirego/trikot/bluetooth/BluetoothManager {
	public abstract fun getMissingPermissionsPublisher ()Lorg/reactivestreams/Publisher;
	public abstract fun getStatePublisher ()Lorg/reactivestreams/Publisher;
	public abstract fun scanForDevices (Lcom/mirego/trikot/streams/cancellable/CancellableManager;Ljava/util/List;)Lorg/reactivestreams/Publisher;
}

public final class com/mirego/trikot/bluetooth/BluetoothManager$Permission : java/lang/Enum {
	public static final field BLUETOOTH Lcom/mirego/trikot/bluetooth/BluetoothManager$Permission;
	public static final field LOCATION Lcom/mirego/trikot/bluetooth/BluetoothManager$Permission;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/mirego/trikot/bluetooth/BluetoothManager$Permission;
	public static fun values ()[Lcom/mirego/trikot/bluetooth/BluetoothManager$Permission;
}

public final class com/mirego/trikot/bluetooth/BluetoothManager$State : java/lang/Enum {
	public static final field OFF Lcom/mirego/trikot/bluetooth/BluetoothManager$State;
	public static final field ON Lcom/mirego/trikot/bluetooth/BluetoothManager$State;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/mirego/trikot/bluetooth/BluetoothManager$State;
	public static fun values ()[Lcom/mirego/trikot/bluetooth/BluetoothManager$State;
}

public abstract interface class com/mirego/trikot/bluetooth/BluetoothScanResult {
	public abstract fun connect (Lcom/mirego/trikot/streams/cancellable/CancellableManager;)Lcom/mirego/trikot/bluetooth/BluetoothDevice;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPhysicalAddress ()Ljava/lang/String;
	public abstract fun getRssi ()Lorg/reactivestreams/Publisher;
	public abstract fun manufacturerSpecificData (I)Lorg/reactivestreams/Publisher;
}

public final class com/mirego/trikot/bluetooth/EmptyBluetoothManager : com/mirego/trikot/bluetooth/BluetoothManager {
	public fun <init> ()V
	public fun getMissingPermissionsPublisher ()Lcom/mirego/trikot/streams/reactive/BehaviorSubject;
	public synthetic fun getMissingPermissionsPublisher ()Lorg/reactivestreams/Publisher;
	public fun getStatePublisher ()Lcom/mirego/trikot/streams/reactive/BehaviorSubject;
	public synthetic fun getStatePublisher ()Lorg/reactivestreams/Publisher;
	public fun scanForDevices (Lcom/mirego/trikot/streams/cancellable/CancellableManager;Ljava/util/List;)Lorg/reactivestreams/Publisher;
}

public final class com/mirego/trikot/bluetooth/android/AndroidAttributeProfileCharacteristic : com/mirego/trikot/bluetooth/AttributeProfileCharacteristic {
	public static final field Companion Lcom/mirego/trikot/bluetooth/android/AndroidAttributeProfileCharacteristic$Companion;
	public fun <init> (Landroid/bluetooth/BluetoothGattCharacteristic;Lcom/mirego/trikot/bluetooth/android/AndroidBluetoothDevice;)V
	public fun getEvent ()Lcom/mirego/trikot/streams/reactive/PublishSubject;
	public synthetic fun getEvent ()Lorg/reactivestreams/Publisher;
	public fun getUuid ()Ljava/lang/String;
	public fun read ()V
	public fun watch ()V
	public fun watchWithIndication ()V
	public fun write ([B)V
}

public final class com/mirego/trikot/bluetooth/android/AndroidAttributeProfileCharacteristic$Companion {
	public final fun getCLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR ()Ljava/util/UUID;
}

public final class com/mirego/trikot/bluetooth/android/AndroidAttributeProfileService : com/mirego/trikot/bluetooth/AttributeProfileService {
	public fun <init> (Landroid/bluetooth/BluetoothGattService;Lcom/mirego/trikot/bluetooth/android/AndroidBluetoothDevice;)V
	public final fun getAndroidCharacteristic ()Ljava/util/Map;
	public fun getCharacteristics ()Lorg/reactivestreams/Publisher;
}

public final class com/mirego/trikot/bluetooth/android/AndroidBluetoothDevice : com/mirego/trikot/bluetooth/BluetoothDevice {
	public fun <init> (Landroid/bluetooth/BluetoothDevice;Landroid/content/Context;Lcom/mirego/trikot/streams/cancellable/CancellableManager;)V
	public final fun getAndroidProfiles ()Ljava/util/Map;
	public fun getAttributeProfileServices ()Lcom/mirego/trikot/streams/reactive/BehaviorSubject;
	public synthetic fun getAttributeProfileServices ()Lorg/reactivestreams/Publisher;
	public fun getName ()Ljava/lang/String;
	public fun getPhysicalAddress ()Ljava/lang/String;
	public fun isConnected ()Lorg/reactivestreams/Publisher;
	public final fun readCharacteristic (Landroid/bluetooth/BluetoothGattCharacteristic;)V
	public final fun readDescriptor (Landroid/bluetooth/BluetoothGattDescriptor;)V
	public final fun setAndroidProfiles (Ljava/util/Map;)V
	public final fun setCharacteristicNotification (Landroid/bluetooth/BluetoothGattCharacteristic;Z)V
	public final fun writeCharacteristic (Landroid/bluetooth/BluetoothGattCharacteristic;)V
	public final fun writeDescriptor (Landroid/bluetooth/BluetoothGattDescriptor;)V
}

public final class com/mirego/trikot/bluetooth/android/AndroidBluetoothDevice$BluetoothCommand {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun execute ()V
}

public final class com/mirego/trikot/bluetooth/android/AndroidBluetoothManager : com/mirego/trikot/bluetooth/BluetoothManager {
	public static final field Companion Lcom/mirego/trikot/bluetooth/android/AndroidBluetoothManager$Companion;
	public static final field RETRY_TIMEOUT J
	public static final field SCAN_TIMEOUT J
	public fun <init> (Landroid/content/Context;)V
	public final fun getContext ()Landroid/content/Context;
	public fun getMissingPermissionsPublisher ()Lcom/mirego/trikot/streams/reactive/BehaviorSubject;
	public synthetic fun getMissingPermissionsPublisher ()Lorg/reactivestreams/Publisher;
	public fun getStatePublisher ()Lcom/mirego/trikot/streams/reactive/BehaviorSubject;
	public synthetic fun getStatePublisher ()Lorg/reactivestreams/Publisher;
	public final fun refreshPermissions ()V
	public fun scanForDevices (Lcom/mirego/trikot/streams/cancellable/CancellableManager;Ljava/util/List;)Lorg/reactivestreams/Publisher;
}

public final class com/mirego/trikot/bluetooth/android/AndroidBluetoothManager$Companion {
}

public final class com/mirego/trikot/bluetooth/android/AndroidBluetoothScanResult : com/mirego/trikot/bluetooth/BluetoothScanResult {
	public fun <init> (Landroid/bluetooth/le/ScanResult;Landroid/content/Context;)V
	public fun connect (Lcom/mirego/trikot/streams/cancellable/CancellableManager;)Lcom/mirego/trikot/bluetooth/BluetoothDevice;
	public final fun doHeartbeat ()V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLostHeartbeatCallback ()Lkotlin/jvm/functions/Function0;
	public fun getName ()Ljava/lang/String;
	public fun getPhysicalAddress ()Ljava/lang/String;
	public fun getRssi ()Lorg/reactivestreams/Publisher;
	public fun manufacturerSpecificData (I)Lorg/reactivestreams/Publisher;
	public final fun setLostHeartbeatCallback (Lkotlin/jvm/functions/Function0;)V
}

public final class com/mirego/trikot/bluetooth/android/ScanResultExtensionsKt {
	public static final fun toBluetoothScanResult (Landroid/bluetooth/le/ScanResult;Landroid/content/Context;)Lcom/mirego/trikot/bluetooth/android/AndroidBluetoothScanResult;
}

