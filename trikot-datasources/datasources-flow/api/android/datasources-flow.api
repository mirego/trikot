public abstract class com/mirego/trikot/datasources/flow/BaseExpiringExecutableFlowDataSource : com/mirego/trikot/datasources/flow/BaseFlowDataSource {
	public fun <init> ()V
	public fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun readValue (Lcom/mirego/trikot/datasources/flow/ExpiringFlowDataSourceRequest;)Lkotlinx/coroutines/flow/Flow;
	protected fun shouldRead (Lcom/mirego/trikot/datasources/flow/ExpiringFlowDataSourceRequest;Lcom/mirego/trikot/datasources/DataState;)Z
	public synthetic fun shouldRead (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Lcom/mirego/trikot/datasources/DataState;)Z
}

public abstract class com/mirego/trikot/datasources/flow/BaseFlowDataSource : com/mirego/trikot/datasources/flow/FlowDataSource {
	public fun <init> ()V
	public fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun internalRead (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun read (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;)Lkotlinx/coroutines/flow/Flow;
	public fun save (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun shouldRead (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Lcom/mirego/trikot/datasources/DataState;)Z
}

public final class com/mirego/trikot/datasources/flow/DiskCacheFlowDataSource : com/mirego/trikot/datasources/flow/BaseFlowDataSource {
	public fun <init> (Lkotlinx/serialization/json/Json;Lkotlinx/serialization/KSerializer;Lcom/mirego/trikot/datasources/flow/storage/FlowDataSourceFileManager;Lcom/mirego/trikot/datasources/flow/FlowDataSource;Ljava/lang/String;ZLkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lkotlinx/serialization/json/Json;Lkotlinx/serialization/KSerializer;Lcom/mirego/trikot/datasources/flow/storage/FlowDataSourceFileManager;Lcom/mirego/trikot/datasources/flow/FlowDataSource;Ljava/lang/String;ZLkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun save (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/mirego/trikot/datasources/flow/ExecutableFlowDataSource : com/mirego/trikot/datasources/flow/BaseFlowDataSource {
	public fun <init> ()V
	public fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun internalRead (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/mirego/trikot/datasources/flow/ExecutableFlowDataSourceRequest : com/mirego/trikot/datasources/flow/FlowDataSourceRequest {
	public fun <init> (Ljava/lang/String;Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Ljava/lang/String;Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public final fun component3 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ljava/lang/String;Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;)Lcom/mirego/trikot/datasources/flow/ExecutableFlowDataSourceRequest;
	public static synthetic fun copy$default (Lcom/mirego/trikot/datasources/flow/ExecutableFlowDataSourceRequest;Ljava/lang/String;Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/mirego/trikot/datasources/flow/ExecutableFlowDataSourceRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlock ()Lkotlin/jvm/functions/Function1;
	public fun getCacheableId ()Ljava/lang/String;
	public fun getRequestType ()Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/mirego/trikot/datasources/flow/ExpiringExecutableFlowDataSource : com/mirego/trikot/datasources/flow/BaseExpiringExecutableFlowDataSource {
	public fun <init> ()V
	public fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun internalRead (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/mirego/trikot/datasources/flow/ExpiringExecutableFlowDataSourceRequest : com/mirego/trikot/datasources/flow/ExpiringFlowDataSourceRequest {
	public fun <init> (Ljava/lang/String;JLcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Ljava/lang/String;JLcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()J
	public final fun component3 ()Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public final fun component4 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ljava/lang/String;JLcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;)Lcom/mirego/trikot/datasources/flow/ExpiringExecutableFlowDataSourceRequest;
	public static synthetic fun copy$default (Lcom/mirego/trikot/datasources/flow/ExpiringExecutableFlowDataSourceRequest;Ljava/lang/String;JLcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/mirego/trikot/datasources/flow/ExpiringExecutableFlowDataSourceRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlock ()Lkotlin/jvm/functions/Function1;
	public fun getCacheableId ()Ljava/lang/String;
	public fun getExpiredInMilliseconds ()J
	public fun getRequestType ()Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/mirego/trikot/datasources/flow/ExpiringFlowDataSourceRequest : com/mirego/trikot/datasources/flow/FlowDataSourceRequest {
	public abstract fun getExpiredInMilliseconds ()J
}

public abstract interface class com/mirego/trikot/datasources/flow/FlowDataSource {
	public abstract fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun read (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun save (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/mirego/trikot/datasources/flow/FlowDataSourceExpiringValue {
	public fun <init> (Ljava/lang/Object;J)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()J
	public final fun copy (Ljava/lang/Object;J)Lcom/mirego/trikot/datasources/flow/FlowDataSourceExpiringValue;
	public static synthetic fun copy$default (Lcom/mirego/trikot/datasources/flow/FlowDataSourceExpiringValue;Ljava/lang/Object;JILjava/lang/Object;)Lcom/mirego/trikot/datasources/flow/FlowDataSourceExpiringValue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExpiredEpoch ()J
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public final fun isExpired ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/mirego/trikot/datasources/flow/FlowDataSourceRequest {
	public abstract fun getCacheableId ()Ljava/lang/String;
	public abstract fun getRequestType ()Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
}

public final class com/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type : java/lang/Enum {
	public static final field REFRESH_CACHE Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public static final field USE_CACHE Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
	public static fun values ()[Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest$Type;
}

public final class com/mirego/trikot/datasources/flow/MemoryCacheFlowDataSource : com/mirego/trikot/datasources/flow/BaseFlowDataSource {
	public fun <init> ()V
	public fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;)V
	public synthetic fun <init> (Lcom/mirego/trikot/datasources/flow/FlowDataSource;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun save (Lcom/mirego/trikot/datasources/flow/FlowDataSourceRequest;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/mirego/trikot/datasources/flow/RetryableDataFlow : kotlinx/coroutines/flow/StateFlow {
	public fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;Lcom/mirego/trikot/datasources/DataState;Lkotlin/jvm/functions/Function0;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;Lcom/mirego/trikot/datasources/DataState;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun collect (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getReplayCache ()Ljava/util/List;
	public fun getValue ()Lcom/mirego/trikot/datasources/DataState;
	public synthetic fun getValue ()Ljava/lang/Object;
	public final fun retry ()V
	public final fun retryIfError ()V
}

public final class com/mirego/trikot/datasources/flow/extensions/DataStateFlowExtensionsKt {
	public static final fun combineData (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;
	public static final fun combineData (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;
	public static final fun combineData (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;
	public static final fun combineData (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;
	public static final fun filterValue (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun flatMapLatestDataState (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
	public static final fun mapValue (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
	public static final fun withPreviousDataStateValue (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun withPreviousValue (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class com/mirego/trikot/datasources/flow/storage/FlowDataSourceFileManager {
	public abstract fun deleteFile (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getFileAsString (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun saveStringValueToFile (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/mirego/trikot/datasources/flow/storage/OkioFlowDataSourceFileManager : com/mirego/trikot/datasources/flow/storage/FlowDataSourceFileManager {
	public fun <init> (Lokio/FileSystem;Lkotlin/coroutines/CoroutineContext;Lokio/Path;)V
	public synthetic fun <init> (Lokio/FileSystem;Lkotlin/coroutines/CoroutineContext;Lokio/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun deleteFile (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getFileAsString (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun saveStringValueToFile (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

